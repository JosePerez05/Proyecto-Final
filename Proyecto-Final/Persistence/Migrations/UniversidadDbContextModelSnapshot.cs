// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(UniversidadDbContext))]
    partial class UniversidadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Carrera", b =>
                {
                    b.Property<int>("CarreraId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstudianteForeingKey");

                    b.Property<string>("Nombre");

                    b.HasKey("CarreraId");

                    b.HasIndex("EstudianteForeingKey");

                    b.ToTable("Carrera");
                });

            modelBuilder.Entity("Model.Estudiante", b =>
                {
                    b.Property<int>("EstudianteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.HasKey("EstudianteId");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("Model.Materia", b =>
                {
                    b.Property<int>("MateriaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CantCre");

                    b.Property<string>("Nombre");

                    b.Property<int>("ProfesorForeingKey");

                    b.HasKey("MateriaId");

                    b.HasIndex("ProfesorForeingKey");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("Model.Profesor", b =>
                {
                    b.Property<int>("ProfesorId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido");

                    b.Property<string>("Nombre");

                    b.HasKey("ProfesorId");

                    b.ToTable("Profesor");
                });

            modelBuilder.Entity("Model.Secciones", b =>
                {
                    b.Property<int>("SeccionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Aula");

                    b.Property<int>("MateriaForeingKey");

                    b.HasKey("SeccionId");

                    b.HasIndex("MateriaForeingKey");

                    b.ToTable("Secciones");
                });

            modelBuilder.Entity("Model.Carrera", b =>
                {
                    b.HasOne("Model.Estudiante", "Estudiante")
                        .WithMany("Carrera")
                        .HasForeignKey("EstudianteForeingKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Materia", b =>
                {
                    b.HasOne("Model.Profesor", "Profesor")
                        .WithMany("Materia")
                        .HasForeignKey("ProfesorForeingKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Model.Secciones", b =>
                {
                    b.HasOne("Model.Materia", "Materia")
                        .WithMany("Secciones")
                        .HasForeignKey("MateriaForeingKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
